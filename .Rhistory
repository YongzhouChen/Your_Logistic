library(cyz)
help(package="cyz")
?Hello
?hello
library(cyz)
Cyz_sum(1,1)
?Cyz_sum
??Cyz_sum
?Cyz_sum
library(cyz)
?Cyz_sum
library(cyz)
rm(list=ls())
set.seed(123)
n=100
p=4
X<-matrix(rnorm(n*p),nrow=n)
Y<-c(rep(0,n/2),rep(1,n/2))
Test_Logistic<-function(X,Y,Max_iter=1000,learning_rate=0.1){
beta<- rep(0,ncol(X))
for(i in 1:Max_iter)
{
if(i==Max_iter){
print("we've reached the maximum iterations")
return(beta)}
else
{
print(paste("we are processing",i))
X_beta <- X %*% beta
gradient <- (1/n)* t(X) %*% (exp(X_beta)/(1+exp(X_beta)) - Y)
beta_new <- beta - learning_rate*gradient
print(beta_new)
if(sum(abs(beta-beta_new)) <=0.001){
print(paste("Lower than the minimum error",beta_new))
return(beta_new)
break}
else{beta <- beta_new}}
}
}
Test_Logistic(X,Y,Max_iter=1000,learning_rate=0.05)
library(cyz)
?cyz_LOO
library(cyz)
Y<-c(rep(0,n/2),rep(1,n/2))
rm(list=ls())
set.seed(123)
n=100
p=4
X<-matrix(rnorm(n*p),nrow=n)
Y<-c(rep(0,n/2),rep(1,n/2))
total_error <- cyz_LOO(X,Y,cyz_Logistic)
cyz_Logistic(X,Y)
total_error <- cyz_LOO(X,Y,cyz_Logistic)
library(cyz)
rm(list=ls())
set.seed(123)
n=100
p=4
X<-matrix(rnorm(n*p),nrow=n)
Y<-c(rep(0,n/2),rep(1,n/2))
total_error <- cyz_LOO(X,Y,cyz_Logistic)
library(cyz)
rm(list=ls())
set.seed(123)
n=100
p=4
X<-matrix(rnorm(n*p),nrow=n)
Y<-c(rep(0,n/2),rep(1,n/2))
total_error <- cyz_LOO(X,Y,cyz_Logistic)
library(cyz)
rm(list=ls())
set.seed(123)
n=100
p=4
X<-matrix(rnorm(n*p),nrow=n)
Y<-c(rep(0,n/2),rep(1,n/2))
total_error <- cyz_LOO(X,Y,cyz_Logistic)
cyz_Logistic(X,Y)
idx <- 1
[-idx]
train_X <- X[-idx]
train_y <- y[-idx]
train_y <- Y[-dix]
train_y <- Y[-idx]
model_result <- cyz_Logistic(train_X,train_y)
ncol(train_X)
train_X <- X[-idx,]
model_result <- cyz_Logistic(train_X,train_y)
library(cyz)
rm(list=ls())
set.seed(123)
n=100
p=4
X<-matrix(rnorm(n*p),nrow=n)
Y<-c(rep(0,n/2),rep(1,n/2))
total_error <- cyz_LOO(X,Y,cyz_Logistic)
library(cyz)
rm(list=ls())
set.seed(123)
n=100
p=4
X<-matrix(rnorm(n*p),nrow=n)
Y<-c(rep(0,n/2),rep(1,n/2))
total_error <- cyz_LOO(X,Y,cyz_Logistic)
